datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

generator client {
  provider        = "prisma-client-js"
}

model User {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  image         String?
  email         String?
  username      String?
  conversations ConversationParticipant[]
  messages      Message[]
  walletAddress String?   @unique
  privateKey    String?   @unique
}

model Conversation {
  id                  String  @id @default(auto()) @map("_id") @db.ObjectId
  messages            Message[]
  participants        ConversationParticipant[]
  conversationAddress String? @unique
  latestMessageId     String? @unique
  latestMessage       Message?  @relation(name: "latestConversationMessage", fields: [latestMessageId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model ConversationParticipant {
  id                   String  @id @default(auto()) @map("_id") @db.ObjectId
  userId               String
  user                 User   @relation(fields: [userId], references: [id])
  conversationId       String
  conversation         Conversation @relation(fields: [conversationId], references: [id])
  hasSeenLatestMessage Boolean
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model Message {
  id               String  @id @default(auto()) @map("_id") @db.ObjectId
  conversationId   String
  conversation     Conversation @relation(fields: [conversationId], references: [id])
  senderId         String
  sender           User     @relation(fields: [senderId], references: [id])
  body             String
  isLatestIn       Conversation? @relation(name: "latestConversationMessage")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
 